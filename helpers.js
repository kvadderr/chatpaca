const db = require('./db')
const { v4: uuidv4 } = require('uuid');
const crypto = require('crypto');
const uuid = uuidv4();
const axios = require('axios')
const welcome = "‚úã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, "
const welcome_2 = ". \n–ù–∞—à —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–∏—Å –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ AI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Å–µ–ª—Ñ–∏."

const huge = "üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–π 40% –æ—Ç –ø—Ä–æ–¥–∞–∂!"
const profile = "üë§ –ü—Ä–æ—Ñ–∏–ª—å: "
const refferals = "\nüë≠ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: "
const earned = "\nüí∏ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: "
const currentBalance = "\n‚úÖ –ë–∞–ª–∞–Ω—Å: "
const link = "\n\n\nüîó –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \n"

function getWelcome(name) {
  return welcome + name + welcome_2;
}

async function generateOrder(userID) {
  innerID = uuid;
  project = process.env.PROJECT_ID;
  sum = process.env.SUM;
  currency = process.env.CURRENCY;
  email = "sumbembaev.b@gmail.com"

  db.createOrder(innerID, userID);
  const combinedString = process.env.SECRET1 + 'initPayment' + project + sum + currency + innerID + email;
  const md5Hash = crypto.createHash('md5').update(combinedString).digest('hex');
  const formData = new URLSearchParams();
  formData.append('action', 'initPayment');
  formData.append('innerID', innerID);
  formData.append('project', project);
  formData.append('sum', sum);
  formData.append('currency', currency);
  formData.append('email', email);
  formData.append('sign', md5Hash);

  try {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π API
    const response = await axios.post("https://pay.primepayments.io/API/v2/", formData, {
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
    });

    // –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
    return response.data;
  } catch (error) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞
    console.error('Error during API request:', error.message);
    throw error; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  }
}

async function getProfileInfo(name, id) {
  const profileInfo = await db.getUser(id)
  return profile + name + earned + profileInfo?.earned + currentBalance + profileInfo?.balance;
}

function getPhotoInfo() {
  return "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Å—ç–ª—Ñ–∏ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–±–µ—Ä–µ—Ç–µ –ø–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π."
}

function getUnlockWait() {
  return "–û–∂–∏–¥–∞–π—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥"
}

async function getReferralInfo(userID) {
  const profileInfo = await db.getUser(userID)
  const referralCount = await db.getReferralCount(userID);
  const referralLink = 'https://t.me/SlovoPacanaAIBot?start=' + userID;
  return huge + "\n" + refferals + referralCount.referralCount + earned + profileInfo.earned + currentBalance + profileInfo.balance + link + referralLink
}

function getPhotoQueue() {
  const first = "‚è≥ –§–æ—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏, –æ–∂–∏–¥–∞–Ω–∏–µ: 1 –º–∏–Ω."
  const second = "\nüôÖ‚Äç‚ôÇÔ∏è‚Äç –Ø –Ω–µ —Ö—Ä–∞–Ω—é –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –í—Å–µ –∞–Ω–æ–Ω–∏–º–Ω–æ. "
  return first + second
}

function getGender() {
  const second = "\n‚†Ä‚†Äüëá‚†Ä‚†Ä‚†Ä‚†Ä–í—ã–±–µ—Ä–∏‚†Ä‚†Ä‚†Ä‚†Äüëá"
  return second
}

module.exports = {
  getWelcome,
  getProfileInfo,
  getPhotoInfo,
  getReferralInfo,
  getPhotoQueue,
  getGender,
  getUnlockWait,
  generateOrder
}